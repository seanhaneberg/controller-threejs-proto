{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/engine/TetrisDefinitions.js","webpack:///./src/engine/TetrisEngine.js","webpack:///./src/index.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","TetrisDefinitions","TetrisEngine","TetrisEngine_classCallCheck","this","minX","minY","maxX","boardWidth","maxY","boardHeight","activePiece","blocks","listeners","gameOver","listener","eventName","defs","pieces","defIndex","Math","floor","random","initX","initY","def","x","y","TetrisBlock","TetrisPieceDesc","available","pos","getPos","piece","counterClock","candidate","copy","rotate","checkPieceDesc","xDelta","yDelta","emitTetrisEvent","checkMove","move","counterClockwise","checkRotate","check","blocksInRows","fill","formedLines","count","gameContinues","step","findFormedLines","addBlocksToBoard","createRandomPiece","setPos","basePos","block","xOffset","yOffset","newX","newY","renderer","THREE","setSize","innerWidth","innerHeight","document","body","appendChild","domElement","camera","position","set","lookAt","scene","material","color","geometry","vertices","render","engine","addTetrisListener","event","console","log","forEach","rand","colors","mat","renderBlock","drawBlock","add","renderBlocks","verticesNeedUpdate","newBlock","setTimeout","updateTetris","requestAnimationFrame"],"mappings":"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","file":"main.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([2,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","class TetrisDefinitions {\n\n  static boardWidth = 10;\n  static boardHeight = 20;\n\n  static initX = 4;\n  static initY = 0;\n\n  static pieces = [\n      [\n          [1, 1],\n          [1, 0],\n          [1, 2],\n          [1, 3]\n      ], // [0] I\n      [\n          [1, 1],\n          [1, 0],\n          [1, 2],\n          [2, 2]\n      ], // [1] L\n      [\n          [1, 0],\n          [0, 0],\n          [0, 1],\n          [0, 2]\n      ], // [2] R (mirror of L)\n      [\n          [1, 0],\n          [0, 0],\n          [1, 1],\n          [2, 1]\n      ], // [3] Z\n      [\n          [0, 1],\n          [0, 0],\n          [1, 1],\n          [1, 2]\n      ], // [4] S (mirror of Z)\n      [\n          [0, 1],\n          [0, 0],\n          [1, 0],\n          [1, 1]\n      ], // [5] X\n      [\n          [1, 1],\n          [1, 0],\n          [1, 2],\n          [0, 1]\n      ] // [6] T\n  ];\n}\n\nexport default TetrisDefinitions;","import TetrisDefinitions from './TetrisDefinitions';\n\n/**\n * Taken from https://github.com/seanhaneberg/react-tetris/\n*/\n\nclass TetrisEngine {\n  constructor() {\n    this.minX = 0;\n    this.minY = 0;\n\n    this.maxX = this.minX + TetrisDefinitions.boardWidth - 1;\n    this.maxY = this.minY + TetrisDefinitions.boardHeight - 1;\n    this.activePiece = null;\n\n    this.blocks = [];\n    this.listeners = [];\n    this.gameOver = false;\n  }\n\n  // Assume that listeners have an 'onTetrisEvent(string)' function\n  addTetrisListener(listener) {\n    this.listeners.push(listener);\n  }\n\n  emitTetrisEvent(eventName, data) {\n    for (var i = 0; i < this.listeners.length; i++) {\n      this.listeners[i](eventName, data);\n    }\n  }\n\n  createRandomPiece() {\n    let defs = TetrisDefinitions.pieces;\n    var defIndex = Math.floor(Math.random() * defs.length);\n\n    let initX = TetrisDefinitions.initX;\n    let initY = TetrisDefinitions.initY;\n\n    var blocks = [];\n    var def = defs[defIndex];\n\n    for (var i = 0; i < def.length; i++) {\n      var x = def[i][0] + initX;\n      var y = def[i][1] + initY;\n      blocks.push(new TetrisBlock(x, y));\n    }\n\n    return new TetrisPieceDesc(blocks);\n  }\n\n  check(x, y) {\n    var available = true;\n\n    if (x < this.minX || x > this.maxX || y < this.minY || y > this.maxY) {\n      // The current position is out of bounds.\n      available = false;\n    } else {\n      for (var i = 0; i < this.blocks.length; i++) {\n        var pos = this.blocks[i].getPos();\n        if (pos.x === x && pos.y === y) {\n          available = false;\n          break;\n        }\n      }\n    }\n\n    return available;\n  }\n\n  // Check rotation, clockwise by default\n  checkRotate(piece, counterClock) {\n\n    if (!piece) {\n      return false;\n    }\n\n    // What would this piece look like if we did the requested rotation?\n    var candidate = piece.copy().rotate(counterClock);\n    return this.checkPieceDesc(candidate);\n  }\n\n  // TODO: Consider not having this bound to the single active piece\n  requestActivePieceMove(xDelta, yDelta) {\n    let piece = this.activePiece;\n    this.emitTetrisEvent(\"request move (\" + xDelta + \", \" + yDelta + \")\");\n    return this.checkMove(piece, xDelta, yDelta) && piece.move(xDelta, yDelta);\n  }\n\n  requestActivePieceRotate(counterClockwise) {\n    let piece = this.activePiece;\n    var name = counterClockwise ? \"CounterClockwise\" : \"Clockwise\";\n    this.emitTetrisEvent(\"request\" + name + \"Rotation\", piece);\n    return this.checkRotate(piece, counterClockwise) && piece.rotate(counterClockwise);\n  }\n\n  checkMove(piece, xDelta, yDelta) {\n\n    if (!piece) {\n      return false;\n    }\n\n    // What would this piece look like if we did the requested move?\n    var candidate = piece.copy().move(xDelta, yDelta);\n    return this.checkPieceDesc(candidate);\n  }\n\n  // Is this piece valid on this board?\n  checkPieceDesc(piece) {\n\n    if (!piece) {\n      return false;\n    }\n\n    var available = true;\n\n    for (var i = 0; i < piece.blocks.length; i++) {\n      var pos = piece.blocks[i].getPos();\n\n      if (!this.check(pos.x, pos.y)) {\n        available = false;\n        break;\n      }\n    }\n\n    // The input describes a piece that would be valid on this board.\n    return available;\n  }\n\n  findFormedLines() {\n    var blocksInRows = [];\n    blocksInRows.fill(0, 0, this.boardHeight)\n\n    var formedLines = [];\n    for (var i = 0; i < this.blocks.length; i++) {\n      var curBlock = this.blocks[i];\n      var pos = curBlock.getPos();\n      blocksInRows[pos.y]++;\n\n      if (blocksInRows[pos.y] >= this.boardWidth) {\n        formedLines.push(pos.y);\n      }\n    }\n\n    return formedLines;\n  }\n\n  addBlocksToBoard(piece) {\n    // Could we place it here?\n    if (!this.checkMove(piece, 0, 0)) {\n      return false;\n    }\n\n    for (var i = 0; i < piece.blocks.length; i++) {\n      this.blocks.push(piece.blocks[i]);\n    }\n\n    return true;\n  }\n\n  stepFor(count) {\n    var gameContinues = true;\n    for (var i = 0; i < count; i++) {\n      gameContinues = this.step();\n      if (!gameContinues) {\n        break;\n      }\n    }\n\n    return gameContinues;\n  }\n\n  step() {\n    var gameContinues = true;\n\n    // Find lines to clear\n    var formedLines = this.findFormedLines();\n    if (formedLines && formedLines.length > 0) {\n      this.emitTetrisEvent(\"linesFormed\", formedLines);\n\n      // TODO: Clear out lines\n      // Move all blocks above the top line down n lines down\n    }\n\n    // Get a copy of the active piece, move it down, and see if it's valid.\n    if (!this.activePiece) {\n      this.activePiece = this.createRandomPiece();\n      this.emitTetrisEvent(\"activePieceReplaced\", this.activePiece);\n    } else if (this.checkPieceDesc(this.activePiece.copy().move(0, 1))) {\n      // If the active piece can move down, move it down!\n      this.activePiece.move(0, 1);\n      this.emitTetrisEvent(\"pieceMoved\", this.activePiece);\n    } else if (this.addBlocksToBoard(this.activePiece)) {\n      // We can't move down, so we've placed the current piece's blocks\n      // to the gameboard.\n      this.emitTetrisEvent(\"piecePlaced\", this.activePiece);\n      this.activePiece = null;\n    } else {\n      // We failed to place the activePiece\n      gameContinues = false;\n      this.emitTetrisEvent(\"gameEndTriggered\", this.activePiece);\n    }\n\n    return gameContinues;\n  }\n}\n\nclass TetrisBlock {\n\n  constructor(x, y) {\n    this.setPos(x, y);\n  }\n\n  getPos() {\n    return this.pos;\n  }\n\n  setPos(x, y) {\n    this.pos = { x: x, y: y };\n  }\n\n  move(xDelta, yDelta) {\n    return this.setPos(this.pos.x + xDelta, this.pos.y + yDelta);\n  }\n}\n\n// A collection of blocks and transformations that can be applied to them.\nclass TetrisPieceDesc {\n\n  constructor(blocks) {\n    // Ensure that every piece description has its own copy of blocks to\n    // work with.\n    this.blocks = [];\n\n    // Is there a faster way to do this?\n    for (var i = 0; i < blocks.length; i++) {\n      this.blocks.push(new TetrisBlock(blocks[i].pos.x, blocks[i].pos.y));\n    }\n  }\n\n  copy() {\n    return new TetrisPieceDesc(this.blocks);\n  }\n\n  // shift all the blocks x and y\n  move(xDelta, yDelta) {\n    for (var i = 0; i < this.blocks.length; i++) {\n      this.blocks[i].move(xDelta, yDelta);\n    }\n    return this;\n  }\n\n  // Clockwise rotation (+90 degrees)\n  // x' = x * cos(90) - y * (sin(90))\n  // y' = x * sin(90) + y * (cos(90))\n\n  // Reduce, given that cos(90) = 0 and sin(90) = 1\n  // x' = -y\n  // y' = x\n\n  // Counterclockwise rotation (-90 degrees)\n  // x' = x * cos(-90) - y * (sin(-90))\n  // y' = x * sin(-90) + y * (cos(-90))\n\n  // Reduce, given that cos(-90) = 0 and sin(-90) = -1\n  // x' = y\n  // y' = -x\n\n  rotate(counterClock) {\n    // The first block in the description is always the pivot.\n    var basePos = this.blocks[0].getPos();\n\n    for (var i = 0; i < this.blocks.length; i++) {\n      var block = this.blocks[i];\n      var pos = block.getPos();\n\n      // Convert to a coordinate system where the pivot block is at 0,0\n      var xOffset = pos.x - basePos.x;\n      var yOffset = pos.y - basePos.y;\n\n      var newX = basePos.x + (counterClock ? yOffset : -yOffset);\n      var newY = basePos.y + (counterClock ? -xOffset : xOffset);\n\n      block.setPos({ x: newX, y: newY });\n    }\n  }\n}\n\nexport default TetrisEngine;","import * as THREE from 'three';\nimport style from './main.css';\n\nimport TetrisEngine from './engine/TetrisEngine';\n\n/**\n * Tutorial from https://threejs.org/docs/#manual/en/introduction/Drawing-lines\n */\n\nvar renderer = new THREE.WebGLRenderer();\nrenderer.setSize(window.innerWidth, window.innerHeight);\ndocument.body.appendChild(renderer.domElement);\n\nvar camera = new THREE.PerspectiveCamera(45, window.innerWidth / window.innerHeight, 1, 500);\ncamera.position.set(0, 0, 100);\ncamera.lookAt(0, 0, 0);\n\nvar scene = new THREE.Scene();\n\n//create a blue LineBasicMaterial\nvar material = new THREE.LineBasicMaterial({ color: 0x0000ff });\n\nvar geometry = new THREE.Geometry();\ngeometry.vertices.push(new THREE.Vector3(-10, 0, 0));\ngeometry.vertices.push(new THREE.Vector3(0, 10, 0));\ngeometry.vertices.push(new THREE.Vector3(10, 0, 0));\n\nvar line = new THREE.Line(geometry, material);\nrenderer.render(scene, camera);\n\nconst tetrisCallback = (event, data) => {\n  console.log(event);\n  console.log(data);\n  switch (event) {\n    case 'activePieceReplaced':\n      data.blocks.forEach((block) => {\n        let rand = Math.floor(Math.random() * colors.length);\n        let mat = new THREE.LineBasicMaterial({ color: colors[rand] });\n        let renderBlock = new THREE.Line(drawBlock(block), mat);\n        scene.add(renderBlock);\n        renderBlocks.push({ renderBlock, piece: data, block });\n      });\n    case 'pieceMoved':\n      renderBlocks.forEach((renderBlock) => {\n        if (renderBlock.piece === data) {\n          const size = 1;\n          let geometry = renderBlock.renderBlock.geometry;\n          data.blocks.forEach((block) => {\n            if (renderBlock.block === block) {\n              let pos = block.pos;\n              geometry.vertices[0].x = pos.x;\n              geometry.vertices[0].y = -pos.y;\n\n              geometry.vertices[1].x = pos.x + size;\n              geometry.vertices[1].y = -pos.y;\n\n              geometry.vertices[2].x = pos.x + size;\n              geometry.vertices[2].y = -pos.y + size;\n\n              geometry.vertices[3].x = pos.x;\n              geometry.vertices[3].y = -pos.y + size;\n\n              geometry.vertices[4].x = pos.x;\n              geometry.vertices[4].y = -pos.y;\n            }\n          });\n          geometry.verticesNeedUpdate = true;\n        }\n      });\n  }\n};\n\nlet engine = new TetrisEngine();\nengine.addTetrisListener(tetrisCallback);\n\nconst updateTetris = () => {\n  let gameContinues = engine.step();\n  engine.step();\n  if (gameContinues) {\n    setTimeout(updateTetris, 1000);\n  }\n};\n\nlet renderBlocks = [];\n\nconst drawBlock = (block, mat) => {\n  let pos = block.getPos();\n\n  // TODO: Make a more sophisticated block creation policy?\n  let newBlock = new THREE.Geometry();\n  const size = 1;\n  newBlock.vertices.push(new THREE.Vector3(pos.x, -pos.y, 0));\n  newBlock.vertices.push(new THREE.Vector3(pos.x + size, -pos.y, 0));\n  newBlock.vertices.push(new THREE.Vector3(pos.x + size, -pos.y + size, 0));\n  newBlock.vertices.push(new THREE.Vector3(pos.x, -pos.y + size, 0));\n  newBlock.vertices.push(new THREE.Vector3(pos.x, -pos.y, 0));\n  return newBlock;\n}\n\nconst colors = [\n  0x0000ff,\n  0x00ff00\n];\n\nvar render = () => {\n  requestAnimationFrame(render);\n  renderer.render(scene, camera);\n};\n\nsetTimeout(updateTetris, 1000);\nrender();\n"],"sourceRoot":""}